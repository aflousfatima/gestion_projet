spring.application.name=Authentification_Service
server.port=8083
spring.security.enabled=false
spring.config.import=optional:file:.env[.properties]

#----------------------Configuration pour connexion avec vault--------------------#

spring.cloud.vault.uri=https://localhost:8200
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=${VAULT_TOKEN}
spring.cloud.vault.scheme=https
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.default-context=keycloak

#----------------------Configuration pour connexion avec keycloak--------------------#
# URL du serveur Keycloak
keycloak.auth-server-url=http://localhost:8081
# Nom du realm dans Keycloak
keycloak.realm=platforme-agile
# ID du client Keycloak
keycloak.resource=Authentification-Service-AGILIA
# Secret du client (si tu utilises un client confidentiel)
keycloak.credentials.secret=${credentials.secret}
# Configurations de l'integration de Keycloak avec Spring Security
     # L'application utilise uniquement des tokens pour l'authentification
keycloak.bearer-only=true 
     # Si ton client est public, mettez-le a true
keycloak.public-client=false

#----------------------Configuration pour connexion avec serveur de decouverte consul--------------------#
spring.cloud.consul.host=localhost
spring.cloud.consul.port= 8500
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.health-check-url=http://192.168.1.153:8085/actuator/health
spring.cloud.consul.discovery.health-check-path= /actuator/health
spring.cloud.consul.discovery.instance-id= ${spring.application.name}-${random.value}

#----------------------Configuration pour connexion avec MAILTRAP--------------------#
spring.mail.host=smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=${USERNAME_MAILTRAP}
spring.mail.password=${PASSWORD_MAILTRAP}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#---------------------------------- Creation de BD --------------------------#
spring.datasource.url=jdbc:mysql://localhost:3306/gestion_invitations?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#---------------------------------- Configuration de Reselience 4j --------------------------#
#----RateLimiter---#
resilience4j.ratelimiter.instances.AuthServiceLimiter.limit-for-period= 5
resilience4j.ratelimiter.instances.AuthServiceLimiter.limit-refresh-period= 10s
resilience4j.ratelimiter.instances.AuthServiceLimiter.timeout-duration= 0

#----Bulkhead-------#
bulkhead.instances.AuthServiceBulkhead.max-concurrent-calls= 5
bulkhead.instances.AuthServiceBulkhead.max-wait-duration= 0

#-----Retry-------#
resilience4j.retry.instances.AuthServiceRetry.max-attempts=3
resilience4j.retry.instances.AuthServiceRetry.wait-duration=2s

#----TimeLimiter----#
resilience4j.timelimiter.instances.AuthServiceTimeLimiter.timeout-duration=3s
resilience4j.timelimiter.instances.AuthServiceTimeLimiter.cancel-running-future=true

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs