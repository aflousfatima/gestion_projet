spring.config.import=optional:file:.env[.properties]
#----------------------Configuration de H2 comme base de test--------------------#
# Configuration de la datasource H2
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=MySQL
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Configuration JPA/Hibernate
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Configuration HikariCP (optionnelle, mais recommandée pour les tests)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=60000
spring.datasource.hikari.connection-timeout=30000
#----------------------Configuration de keycloak pour base de test--------------------#
# URL du serveur Keycloak
keycloak.auth-server-url=http://localhost:8081
# Nom du realm dans Keycloak
keycloak.realm=platforme-agile-test
# ID du client Keycloak
keycloak.resource=Authentification-Service-AGILIA-test
# Secret du client (si tu utilises un client confidentiel)
keycloak.credentials.secret=${credentials.secret.test}
# Configurations de l'integration de Keycloak avec Spring Security
# L'application utilise uniquement des tokens pour l'authentification
keycloak.bearer-only=true 
# Si ton client est public, mettez-le a true
keycloak.public-client=false

#----------------------Configuration pour connexion avec vault--------------------#

spring.cloud.vault.uri=https://localhost:8200
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=${VAULT_TOKEN}
spring.cloud.vault.scheme=https
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.default-context=keycloak
