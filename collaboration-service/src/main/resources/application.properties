spring.application.name=collaboration-service
server.port=8088
spring.config.import=optional:file:.env[.properties]
spring.security.enabled=false
#-------------------------PostgreSQL Database Configuration-------------------------------#
# Configuration de la source de donnees PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres_collab:5432/collabdb
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration Hibernate (JPA)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Configuration du pool de connexions Hikari
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.initialization-fail-timeout=0

# Logging des requetes SQL (optionnel, pour le debogage)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE


#----------------------Configuration pour connexion avec serveur de decouverte consul--------------------#
spring.cloud.consul.host=consul
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.instance-id=${spring.application.name}-${random.value}

#----------------------------Configuration pour Cloudinary-------------------------------------#
cloudinary.cloud_name=${CLOUDINARY_NAME}
cloudinary.api_key=${CLOUDINARY_KEY}
cloudinary.api_secret=${CLOUDINARY_SECRET}
#---------------------------------- Configuration de Reselience 4j --------------------------#
#----RateLimiter---#
resilience4j.ratelimiter.instances.AuthServiceLimiter.limit-for-period= 5
resilience4j.ratelimiter.instances.AuthServiceLimiter.limit-refresh-period= 10s
resilience4j.ratelimiter.instances.AuthServiceLimiter.timeout-duration= 0

#----Bulkhead-------#
bulkhead.instances.AuthServiceBulkhead.max-concurrent-calls= 5
bulkhead.instances.AuthServiceBulkhead.max-wait-duration= 0

#-----Retry-------#
resilience4j.retry.instances.AuthServiceRetry.max-attempts=3
resilience4j.retry.instances.AuthServiceRetry.wait-duration=2s

#----TimeLimiter----#
resilience4j.timelimiter.instances.AuthServiceTimeLimiter.timeout-duration=3s
resilience4j.timelimiter.instances.AuthServiceTimeLimiter.cancel-running-future=true



#----------------------Configuration pour connexion avec keycloak--------------------#
# URL du serveur Keycloak
keycloak.auth-server-url=http://keycloak:8080
# Nom du realm dans Keycloak
keycloak.realm=platforme-agile
# ID du client Keycloak
keycloak.resource=Authentification-Service-AGILIA



spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/platforme-agile
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/platforme-agile/protocol/openid-connect/certs