name: CI/CD with DevSecOps and Docker for Next.js

on:
  push:
    branches: [main]
    paths:
      - 'front-end_service/**'
  pull_request:
    branches: [main]
    paths:
      - 'front-end_service/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Cloner le code source
      - name: Checkout Source Code
        uses: actions/checkout@v4

      # Étape 2 : Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Étape 3 : Installer les dépendances
      - name: Install Dependencies
        run: npm ci

      # Étape 4 : Vérifier les vulnérabilités des dépendances
      - name: Check Dependencies for Vulnerabilities
        run: npm audit --audit-level=high
        continue-on-error: true

      # Étape 5 : Analyse statique avec ESLint
      - name: Run ESLint Security Scan
        run: npm run lint
        continue-on-error: true

      # Étape 6 : Construire l'application Next.js
      - name: Build Next.js App
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      # Étape 7 : Exécuter les tests 
      - name: Run Tests
        run: npm run test
      
      # Étape 8 : Configurer Docker pour GHCR
      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Étape 8 : Construire et pousser l'image Docker
      - name: Build and Push Docker Image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ github.sha }}
          platforms: linux/amd64
